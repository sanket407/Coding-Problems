// Code Jam 2016-B Close Match
// https://code.google.com/codejam/contest/11254486/dashboard#s=p1

import java.io.*;
 
import java.util.*;
 
public class Main {
	
	public static String n1, n2;public static long min;
	public static int mod = 1000000007;
	
	public static void main(String[] args)throws IOException {
		
OutputWriter out=new OutputWriter(System.out);
  Reader r=new Reader();
 BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
  
 
//StringTokenizer st =new StringTokenizer(br.readLine());
		//int n =Integer.parseInt(st.nextToken());
		//int nr =Integer.parseInt(st.nextToken());
 
 int t=Integer.parseInt(br.readLine());
 
 for(int o=1;o<=t;o++)
 { min=Long.MAX_VALUE;
 int flag=1;
	 StringTokenizer st  = new StringTokenizer(br.readLine());
	 String a = st.nextToken();
	 String b = st.nextToken();
	 
	 char aa[] = a.toCharArray();
	 char bb[] = b.toCharArray();
	 
	 int n =a.length();
	 
	 for(int i=0;i<n;i++)
	 {
		 if(aa[i]==bb[i] && aa[i]!='?')       //both are identical digits
			 continue;
		 
		 if(aa[i]!='?' && bb[i]!='?')          //both are diff digits
		 {	 if(aa[i]>bb[i])
				 compute(String.valueOf(aa),String.valueOf(bb),i,n,0);     //at first pt of difference a has larger digit
		                                                         // so fill all rem '?' of a as '0' and of b as '9'
			 else
				 compute(String.valueOf(aa),String.valueOf(bb),i,n,1);     //b has larger digit so fill all rem '?' of b as '0' and of a as '1'
		
		 flag=0;break;                         //since pt of diff has been found no other possibilities exist apart from abv. 2
		 }
		 
		 if(aa[i]=='?' && bb[i]=='?')       //both are '?'
		 {
			 aa[i]='0';bb[i]='1';
			 compute(String.valueOf(aa),String.valueOf(bb),i,n,1);
			 bb[i]='0';aa[i]='1';
			 compute(String.valueOf(aa),String.valueOf(bb),i,n,0);
			 aa[i]='0';bb[i]='0';
			 
			 
		 }
		 else if(aa[i]=='?')           //a has '?' and b has digit
		 {
			 if(bb[i]!='9')
			 {
				 aa[i]=(char)(bb[i]+1);
				 compute(String.valueOf(aa),String.valueOf(bb),i,n,0);
			 }
			 
			 if(bb[i]!='0')
			 {
				 aa[i]=(char)(bb[i]-1);
				 compute(String.valueOf(aa),String.valueOf(bb),i,n,1);
				 
			 }
			 
			 aa[i]=bb[i];
			 
			 
		 }
		 else          // b has '?' and a has digit
		 {

			 if(aa[i]!='9')
			 {
				 bb[i]=(char)(aa[i]+1);
				 compute(String.valueOf(aa),String.valueOf(bb),i,n,1);
			 }
			 
			 if(aa[i]!='0')
			 {
				 bb[i]=(char)(aa[i]-1);
				 compute(String.valueOf(aa),String.valueOf(bb),i,n,0);
				 
			 }
			 
			 bb[i]=aa[i];
			 
			 
			 
		 } 
			 
		 }
		 if(flag==1)
		 compute(String.valueOf(aa),String.valueOf(bb),n,n,0);      //final computation if no diff digits are encountered
		 
		 System.out.println("Case #"+o+": "+n1+" "+n2);
		 
	 }
 }
 
 public static void compute(String a,String b,int index,int n,int type)
 {//System.out.println(a+"-"+b+"-"+index);
	 char aa[] = a.toCharArray();
	 char bb[] = b.toCharArray();
	 
	 for(int i=index+1;i<n;i++)
	 {
		 if(type==0)
		 {
			 if(aa[i]=='?')
				 aa[i]='0';
			 if(bb[i]=='?')
				 bb[i]='9';
			 
			 
		 }else
		 {
			 if(aa[i]=='?')
				 aa[i]='9';
			 if(bb[i]=='?')
				 bb[i]='0';
			 
			 
		 }
		 
		 
	 }
	
	 long diff = Math.abs(Long.valueOf(String.valueOf(aa))-Long.valueOf(String.valueOf(bb)));
//	System.out.println(Long.valueOf(String.valueOf(aa))+" "+Long.valueOf(String.valueOf(bb))+" dif"+diff);
	 if(diff < min)
		 {min=diff;
		 n1=(String.valueOf(aa));
		 n2=(String.valueOf(bb));
		 }
	 else if(diff==min)
	 {
		 if(Long.valueOf(String.valueOf(aa))<Long.valueOf(n1))
		 {
			 n1=String.valueOf(aa);
		    n2=String.valueOf(bb);	 
		}
		 else if(Long.valueOf(String.valueOf(aa))==Long.valueOf(String.valueOf(n1)))
		 {
			 if(Long.valueOf(String.valueOf(bb))<Long.valueOf(n2))
			 {
				 n1=String.valueOf(aa);
				 n2=String.valueOf(bb);
				 
			 }
			 
			 
		 }
		 
	 }
	 
	 
 }
 
}
 
class Reader {
    final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;
    public Reader(){din=new DataInputStream(System.in);buffer=new byte[BUFFER_SIZE];bufferPointer=bytesRead=0;
    }public Reader(String file_name) throws IOException{din=new DataInputStream(new FileInputStream(file_name));buffer=new byte[BUFFER_SIZE];bufferPointer=bytesRead=0;
    }public String readLine() throws IOException{byte[] buf=new byte[64];int cnt=0,c;while((c=read())!=-1){if(c=='\n')break;buf[cnt++]=(byte)c;}return new String(buf,0,cnt);
    }public int nextInt() throws IOException{int ret=0;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');if(neg)c=read();do{ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');if(neg)return -ret;return ret;
    }public long nextLong() throws IOException{long ret=0;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');if(neg)c=read();do{ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');if(neg)return -ret;return ret;
    }public double nextDouble() throws IOException{double ret=0,div=1;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');if(neg)c = read();do {ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');if(c=='.')while((c=read())>='0'&&c<='9')ret+=(c-'0')/(div*=10);if(neg)return -ret;return ret;
    }private void fillBuffer() throws IOException{bytesRead=din.read(buffer,bufferPointer=0,BUFFER_SIZE);if(bytesRead==-1)buffer[0]=-1;
    }private byte read() throws IOException{if(bufferPointer==bytesRead)fillBuffer();return buffer[bufferPointer++];
    }public void close() throws IOException{if(din==null) return;din.close();}
}
 
class OutputWriter {
	private final PrintWriter writer;
 
	public OutputWriter(OutputStream outputStream) {
		writer = new PrintWriter(outputStream);
	}
 
	public OutputWriter(Writer writer) {
		this.writer = new PrintWriter(writer);
	}
 
	public void print(Object... objects) {
		for (int i = 0; i < objects.length; i++) {
			if (i != 0)
				writer.print(' ');
			writer.print(objects[i]);
		}
	}
 
	public void printLine(Object... objects) {
		print(objects);
		writer.println();
	}
 
	public void close() {
		writer.close();
	}
}    
